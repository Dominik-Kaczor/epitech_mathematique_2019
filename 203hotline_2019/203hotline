#!/usr/bin/env python3                                                          
from sys import*
from math import*
import random
import time

def compute_1(argv):
   if (argv[1] == "-h"):
      print("USAGE\n\t./203hotline [n k | d]\n\nDESCRIPTION\nn\tn value for the computation of C(n, k)\nk\tk value for the computation of C(n, k)\nd\taverage duration of calls (in seconds)");
      return 0
   elif (argv[1].isdigit()):
      d = int(argv[1])
      count = 0
      print("Binomial distribution:")
      med = d / (3600 * 8)
      medp = 3500 * (d / (3600 * 8))
      overload = 0
      start = time.time()
      while (count <= 50):
         resb = (factorial(3500) // (factorial(count) * factorial(3500 - count))) * pow(med, count) * pow((1 - med), (3500 - count))
         if (count > 25):
            overload = overload + resb
         if (count % 5 == 0 and count != 0):
            print("")
         if (count % 5 == 1):
            print("\t%d -> %0.3f" % (count, resb), end='')
         elif (count % 5 == 0):
            print("%d -> %0.3f" % (count, resb), end='')
         else:
            print("\t%d -> %0.3f" % (count, resb), end='')
         count += 1
      print("")
      print("Overload: %0.1f%%" % (overload * 100))
      end = time.time()
      print("Computation time: %.2f ms" % ((end - start) * 1000))
      print("")
      
      count = 0
      print("Poisson distribution:")
      overload = 0
      start = time.time()
      while (count <= 50):
         resb = (exp(-medp) * pow(medp, count)) / factorial(count)
         if (count > 25):
            overload = overload + resb
         if (count % 5 == 0 and count != 0):
            print("")
         if (count % 5 == 1):
            print("\t%d -> %0.3f" % (count, resb), end='')
         elif (count % 5 == 0):
            print("%d -> %0.3f" % (count, resb), end='')
         else:
            print("\t%d -> %0.3f" % (count, resb), end='')
         count += 1
      print("")
      print("Overload: %0.1f%%" % (overload * 100))
      end = time.time()
      print("Computation time: %.2f ms" % ((end - start) * 1000))
      return 0
   else:
      print("Args have to be ints")
      return(84)

def compute_2(argv):
   if (argv[1].isdigit() and argv[2].isdigit()):
      n = int(argv[1])
      k = int(argv[2])
      print("%d" % k + "-combinations of a set of size %d:" %n)
      res = factorial(n) // (factorial(k) * factorial(n - k))
      print("%d" % res)
      return 0
   else:
      print("Args have to be ints")
      return 84

def main():
   arg = len(argv)
   if (arg == 2):
      return compute_1(argv)
   elif (arg == 3):
      return compute_2(argv)
   else:
      print("Wrong args")
      return (84)

if __name__ == "__main__":
   exit(main())
